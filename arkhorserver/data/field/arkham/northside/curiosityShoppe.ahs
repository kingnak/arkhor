FieldOption Shoppe_Shop {
    field: NS_CuriositieShoppe;
    name: "Shop";
    description: "Instead of having an encounter here, "+
        "you may draw 3 Unique Items and purchase one of "+
        "them for its list price. Discard the other two "+
        "items.";
    activate: {{{
        var res = game.context.drawMultipleObjects(Constants.ObjectType.UniqueItem, "Buy item", this.id, 3, 0, 1);
        if (res.length > 0) {
            var item = res[0];
            var costs = { type: Constants.Costs.Money, amount: item.price };
            if (CHAR.pay(costs)) {
                CHAR.addToInventory(item);
            } else {
                item.returnToDeck();
            }
        }
    }}};
}

ArkhamEncounter Shoppe_Enc1 {
    field: NS_CuriositieShoppe;
    description: "A pulsing void gapes behind a bookshelf, "+
        "sending out waves of heat. Pass a <b>Fight (-1) check</b> "+
        "or it sucks you in, hurling you into the Abyss. "+
        "Have one encounter there, then immediately return."
        +"<br/>Not implemented";
    options: Option.Shoppe_Enc1;
}
AEOption Shoppe_Enc1 {
    baseProperty: DieRoll_Fight;
    activate: {{{
        var res = game.context.skillTest("Resist", this.id, Constants.Skills.Fight, -1, 1);
        if (!res) {
            CHAR.otherFieldEncounter(Constants.Fields.OW_Abyss);
        }
    }}};
}

ArkhamEncounter Shoppe_Enc2 {
    field: NS_CuriositieShoppe;
    description:"A sale takes place. All players may "+
        "participate. Turn over the top 3 Common Item cards "+
        "and the top Unique Item card. Any player may buy "+
        "one or more of these cards for their list price. "+
        "If there is a disagreement over who gets to buy a "+
        "certain card, you decide. Any items not sold are "+
        "discarded.";
    options: Option.Shoppe_Enc2;
}
AEOption Shoppe_Enc2 {
    activate: {{{
        var objects = [];
        objects.push(game.drawSingleObject(Constants.ObjectType.CommonItem));
        objects.push(game.drawSingleObject(Constants.ObjectType.CommonItem));
        objects.push(game.drawSingleObject(Constants.ObjectType.CommonItem));
        objects.push(game.drawSingleObject(Constants.ObjectType.UniqueItem));

        for (var i in game.context.allCharacters) {
            var c = game.context.allCharacters[i];
            var sel = c.selectObjects(objects, "Buy items", this.id, 0, 1000);
            for (var j in sel) {
                var item = sel[j];
                if (c.pay({ type: Constants.Costs.Money, amount: item.price} )) {
                    c.addToInventory(item);

                    // Must remove from list
                    for (var idx in objects) {
                        if (objects[idx].id == item.id) {
                            objects.splice(idx, 1);
                            break;
                        }
                    }
                }
            }
        }

        for (var i in objects) {
            objects[i].returnToDeck();
        }
    }}};
}

ArkhamEncounter {
    field: NS_CuriositieShoppe;
    description: "You weed through piles of junk looking for something useful. "+
                 "Make a <b>Luck (-1) check</b> to see what you find. If you pass, your search has resulted in success. "+
                 "You may look at the top cards of both the Common and Unique Item decks. You may purchase one, both, or neither at list price. "+
                 "If you fail, there is little of interest here, but you may look at the top card of the Common Item deck and purchase it for its list price.";
    options: {AEOption {
        baseProperty: DieRoll_Luck;
        activate: {{{
            var res = game.context.skillTest("Look for items", this.id, -1, 1);
            var objs = [];
            objs.push({type:Constants.ObjectType.CommonItem, amount: 1});
            if (res)
                objs.push({type:Constants.ObjectType.CommonItem, amount: 1});
            var sels = game.context.drawMixedObjects("Buy Items", this.id, objs, 0, 1000);
            for (var i in sels) {
                var costs = { type: Constants.Costs.Money, amount: sels[i].price };
                if (CHAR.pay(costs))
                    CHAR.addToInventory(sels[i]);
                else
                    sels[i].returnToDeck();
            }
        }}};
    }};
}

ArkhamEncounter ShoppeNoise {
    field: NS_CuriositieShoppe;
    description: "As you wander into the back of the shop, you hear a noise. Pass a <b>Speed (-1) check</b> "+
                 "or you look up just in time to see a descending club. Everything goes black. When you awaken, "+
                 "you are somewhere else. "+
                 "You are drawn to a random Other World, and immediately have an encounter there.";
                 /* ORIGINAL: "Draw a mythos card and move to the gate location shown on it, "+
                 "then immediately have an encounter there.";*/
    options: {AEOption {
        baseProperty: DieRoll_Speed;
        activate: {{{
            var res = game.context.skillTest("Evade attack", this.id, Constants.Skills.Speed, -1, 1);
            if (!res) {
                var f = game.utility.randomField(Constants.FieldType.OtherWorld);
                CHAR.placeOnField(f.id);
                CHAR.otherFieldEncounter(f.id);
            }
        }}};
    }};

}

/*
Jackpot! You find just what you've been looking for. Search either the Common or Unique Item deck and purchase any one item of your choice at list price.
Pass a Luck (-1) check or you accidentally drop an item. Discard 1 item of your choice. If you have no items to drop, then draw again for a different encounter.	Luck -1
You examine an obscene statue. Pass a Luck (-2) check or else you feel a cold dread spread through your body as you hold it. You are Cursed.	Luck -2
*/
